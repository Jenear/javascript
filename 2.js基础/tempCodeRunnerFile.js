
const arr = [1, 2, 3, 4, 7, 12, 34, 21, 56, 71, 10000]
    //1:fill() 用一个固定值填充一个数组中从起始索引到终止索引内的全部元素。不包括终止索引。
    //2：pop()方法从数组中删除最后一个元素，并返回该元素的值。此方法更改数组的长度。
    //3：push() 方法将一个或多个元素添加到数组的末尾，并返回该数组的新长度
    //4:reverse() 方法将数组中元素的位置颠倒,并返回该数组。该方法会改变原数组.
    //5:shift() 方法从数组中删除第一个元素，并返回该元素的值。此方法更改数组的长度。改变原数组

//6：sort() 方法用原地算法对数组的元素进行排序，并返回数组。排序算法现在是稳定的。默认排序顺序是根据字符串Unicode码点。
//由于它取决于具体实现，因此无法保证排序的时间和空间复杂性。
//对数字进行排序的常用方法: 
console.log('1', arr.sort()) //[ 1, 10000, 12, 2, 21, 3, 34, 4, 56, 7, 71 ]
console.log('2', arr.sort((a, b) => a - b)) //[ 1, 2, 3, 4, 7, 12, 21, 34, 56, 71, 10000 ]
console.log('3', arr.sort((a, b) => b - a)) //[ 10000, 71, 56, 34, 21, 12, 7, 4, 3, 2, 1 ]
console.log('arr',arr)